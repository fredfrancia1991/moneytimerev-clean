{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "dynamicRoutes": [],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/admin",
      "regex": "^/admin(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin(?:/)?$"
    },
    {
      "page": "/admin/diagnostics",
      "regex": "^/admin/diagnostics(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/diagnostics(?:/)?$"
    },
    {
      "page": "/admin/utilisateurs",
      "regex": "^/admin/utilisateurs(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/admin/utilisateurs(?:/)?$"
    },
    {
      "page": "/cgu",
      "regex": "^/cgu(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/cgu(?:/)?$"
    },
    {
      "page": "/client",
      "regex": "^/client(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/client(?:/)?$"
    },
    {
      "page": "/client/coaching",
      "regex": "^/client/coaching(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/client/coaching(?:/)?$"
    },
    {
      "page": "/client/dashboard",
      "regex": "^/client/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/client/dashboard(?:/)?$"
    },
    {
      "page": "/client/profil",
      "regex": "^/client/profil(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/client/profil(?:/)?$"
    },
    {
      "page": "/client/rendez-vous",
      "regex": "^/client/rendez\\-vous(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/client/rendez\\-vous(?:/)?$"
    },
    {
      "page": "/contact",
      "regex": "^/contact(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/contact(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/mentions-legales",
      "regex": "^/mentions\\-legales(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/mentions\\-legales(?:/)?$"
    },
    {
      "page": "/offres",
      "regex": "^/offres(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/offres(?:/)?$"
    },
    {
      "page": "/politique-de-confidentialite",
      "regex": "^/politique\\-de\\-confidentialite(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/politique\\-de\\-confidentialite(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Router-Segment-Prefetch",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "Next-Router-Segment-Prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  },
  "rewrites": []
}